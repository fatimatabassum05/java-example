pipeline{
    agent any
    environment{
        IMAGE_TAG = "${BUILD_NUMBER}"
    }
    stages{
         stage('Git Checkout Stage') {
            agent {label 'sonar_node'}
            steps{
                git branch: 'main', url: 'https://github.com/fatimatabassum05/java-example.git'
            }
         }
        stage('SonarQube Analysis Stage') {
            agent {label 'sonar_node'}
            steps{
                withSonarQubeEnv('sonar') { 
                    sh "mvn clean verify sonar:sonar -Dsonar.projectKey=sonarqube_2"
                }
            }
        }
        stage('Build docker Image') {
          agent {label 'docker'}
          steps{
            sh 'docker build -t 905418352029.dkr.ecr.ap-south-1.amazonaws.com/fatimatabassum:IMAGE_TAG .'
          }
        }
        stage('Push to ECR'){
            agent {label 'docker'}
            steps{
                withCredentials([aws(credentialsId: "awsCred", region: "ap-south-1")]) {
                script {
                  sh 'aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 905418352029.dkr.ecr.ap-south-1.amazonaws.com'
                  sh 'docker push 905418352029.dkr.ecr.ap-south-1.amazonaws.com/fatimatabassum:IMAGE_TAG'
                    }
                }
            }
        }
        stage('Deploy Stage') {
          agent {label 'docker'}
          steps{
                withCredentials([aws(credentialsId: "awsCred", region: "ap-south-1")]) {
                    sh 'aws eks --region ap-south-1 update-kubeconfig --name eks-cluster'
                    sh 'helm upgrade --install webapp-project ./helm1 -n dev'
              }
          } 
        }
    }
}
